class ListNode {
    int val;
    ListNode next;

    ListNode(int val) {
        this.val = val;
    }
}

public class Solution {

    public void deleteSecond(ListNode head) {
        if (head == null || head.next == null) {
            // If the list is empty or has only one node, no deletion can be performed
            return;
        }

        // Assign the next node of the head to a temporary variable
        ListNode secondNode = head.next;

        // Update the next reference of the head to skip the second node
        head.next = secondNode.next;

        // Disconnect the second node from the list
        secondNode.next = null;
    }

    // Helper function to print the elements of the linked list
    public void printList(ListNode head) {
        ListNode current = head;
        while (current != null) {
            System.out.print(current.val + " ");
            current = current.next;
        }
        System.out.println();
    }

    public static void main(String[] args) {
        Solution solution = new Solution();

        // Create a sample linked list: 1 -> 2 -> 3 -> 4 -> 5
        ListNode head = new ListNode(1);
        head.next = new ListNode(2);
        head.next.next = new ListNode(3);
        head.next.next.next = new ListNode(4);
        head.next.next.next.next = new ListNode(5);

        System.out.println("Original List:");
        solution.printList(head);

        // Delete the second node
        solution.deleteSecond(head);

        System.out.println("List after deleting second node:");
        solution.printList(head);
    }
}


